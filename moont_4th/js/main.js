// main js 


/////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////
/*하단 배너 움직이기*/
////////////////// 로드 구역 /////////////////////////////
window.addEventListener("DOMContentLoaded", function () {

    // 로드구역확인
    console.log("로드확인");

    //////////////////////////////////////////////////////
    // 구현내용 : 이동버튼 클릭시 이미지  이동하여 변경하기
    // 이벤트 종류 : click
    // 이벤트 대상 : .abtn
    // 변경 대상 : .gbox, .gbox img
    //////////////////////////////////////////////////////

    // 이벤트 대상
    var abtn = document.querySelectorAll('.abtn');

    // 변경 대상
    var gbox = document.querySelector('.gbox');

    // 왼쪽버튼 클릭시 호출함수(전달값0)
    abtn[0].onclick = function () {

        // 함수호출확인
        //console.log("나, 왼쪽!");

        // 자동호출지우기
        clearAuto();

        // 이미지 변경함수 호출!
        chgImg(0); // 전달값 0

        // a태그 기본이동 막기
        return false;
    }; /////// click 함수 /////

    // 오른쪽쪽버튼 클릭시 호출함수(전달값1)
    abtn[1].onclick = function () {

        // 함수호출확인
        //console.log("나, 오른쪽!");

        // 자동호출지우기
        clearAuto();

        // 이미지 변경함수 호출!!!
        chgImg(1) // 전달값 1

        // a태그 기본이동 막기
        return false;
    }; /////// click 함수 /////

    /*///////////////////////////////////////////////
        함수명 : chgImg
        기능 : 이미지를 이동하여 이미지 순서를 변경한다
    */ ///////////////////////////////////////////////

    // 광클금지상태 변수
    var prot = 0;

    var chgImg = function (dir) { //dir - 방향 (0-왼쪽, 1-오른쪽)

        console.log("광클1:" + prot);

        // 0. 광클금지
        if (prot) return false; //돌아가
        // port === 1 이면 도아가
        prot = 1; //상태값 1로 변경!!

        console.log("광클2:" + prot);

        // 작동시간 후에 광클선택값을 0으로 풀어주기
        setTimeout(function () {
            prot = 0; //상태풀기
            console.log("광풀3:" + prot);
        }, 400);
        // setTimeout(함수,시간) - 설정시간 후 한번 함수호출!!
        // 시간이 400이면 0.4초간 이므로 넘어가는 트랜지션 시간이 0.4초이므로 광클을 막아준다


        // 1. 함수호출 및 전달값 확인
        console.log("하이" + dir);

        // 2. 변경되는 img리스트 읽어오기
        var ilist = gbox.querySelectorAll('img')
        // 첫번째 이미지 
        var fele = ilist.item(0);
        // 마지막 이미지 (끝번호는 전체길이 -1)
        var lele = ilist.item(ilist.length - 1)

        // 3. 오른쪽 버튼 클릭시 맨앞요소 맨뒤로 이동하기
        if (dir) { /// 1이면 ture
            // 맨앞 요소 뒤로 이동
            gbox.appendChild(fele);
        } ////// if ////////////

        // 4. 왼쪽버튼 클릭시 맨뒤요소 맨앞으로 이동하기
        else { // insertBefore (넣을놈,넣을놈전놈)
            gbox.insertBefore(lele, fele);
        } ///// else /////////////////





    }; ///////// chgImg 함수 ///////////
    ////////////////////////////////////////

    /*
    버튼을 동반한 배너형 컨텐츠를 다루는 4가지 중요분야
    1. 광클금지 : 버튼클릭을 빨리하여 기존 기능이 망가져 보이는것을 막음
    2. 자동넘김 : 일정시간 간격으로 배너가 넘아감
    3. 버튼클릭시 자동넘김 지우기 : 사용자가 버튼을 조작하는순간 자동넘김 기능 지우기
    4. 사용자 조작이 끝난후 다시 자동넘기기 : 버튼 마지막 클릭이 끝난후 자동넘김 셋팅하나만 남기기
    */

    /*/////////////////////////////////////////////
        함수명 : autoCall
        기능 : 슬라이드 넘기기함수 자동호출 (인터발함수)
    */ /////////////////////////////////////////////
    var autoI; // 인터발용변수
    var autoCall = function () {

        console.log("자동호출 작동");

        autoI = setInterval(function () {
            chgImg(1); // 오늘쪽 버튼 클릭이동과 동일함
        }, 3000);
        // setInterval (함수,시간)
        // 일정시간 간격으로 함수를 호출하는 JS내장함수

    }; ///// autoCall함수 ////////////////////////////////////
    ////////////////////////////////////////////////////////

    // 자동 넘김 최초호출 (반드시 할당형익명함수 아래에서 호출!!!!)
    autoCall();

    /*/////////////////////////////////////////////////////
        함수명 : clearAuto
        기능 : 인터발함수를 지우고, 잠시후 다시 자동호출 셋팅하기
            이동버튼 클릭시 이 함수를 호출하여야 함!!
    */ /////////////////////////////////////////////////////
    var autoT; // 타임아웃용 변수
    //////////////////////////////////////////////////////
    var clearAuto = function () {

        console.log("자동호출 지우기");

        // 인터발 함수 지우기
        clearInterval(autoI);

        // 타임아웃함수 지우기(실행쓰나미방지!!!)
        clearTimeout(autoT);

        // 일정시간 후 자동호출함수 재호출하기!!
        autoT = setTimeout(autoCall, 3000);



    }; ///// clearAuto 함수 ///////////////////////////////
    /////////////////////////////////////////////////////


}); /////// 로드 구역///////////////////////
////////////////////////////////////////



$(function () {

    // 슬라이드
    let sld = $('.slide')

    // 드래그 설정
    sld.draggable({
        axis: 'x' // x축 고정
    })

    // 화면의 사이즈(left값의 기본단위임!!!)
    let p4ban = $('#p4box').width();

    // 슬라이드 left값
    let sleft;

    // 배너커버
    let prot = $('.prot');

    // 배너순번(블릿순번)
    let bseq = 0;

    $('#p4box').resize(function () {

        console.log('리사이즈!');

        // 윈도우 크기 재설정
        p4ban = $('#p4box').width()

    }) ///// resize /////
    
    //////////////////////////////드래그함수//////////////////////////////////////////
    sld.on('dragstop touchend',function(){
        
        // 자동 슬라이드 지우기!!!
        clearAuto()
        
        // 광드래그 막기용 커버
        prot.show()
        
        // 슬라이드 left 변경값 체크
        sleft = $(this).offset().left
        
        // 1.1 이하면  나가있는 px크기의 110%확장
        if (sleft < -win * 1.1) {

            // 왼쪾 이동 애니메이션 : -200%이동과 동일
            $(this).stop().animate({

                left: -p4ban * 2 + 'px'

            }, 1500, 'easeOutCubic', function () { // 함수 애니후

                // 이동후에 앞에 두개의 슬라이드가 있으므로 하나를 뒤로 이동시킨후 left값을 다시 -100%로 변경!!! 처음과 똑같은 상태로 만들어 준다!!
                $(this).append($('li', this).first()).css({
                    left: -p4ban + 'px'
                }) ///// css /////

                // 광드래그 커버제거
                prot.hide()

                // 배너타이틀 등장함수 호출
                banTit()

            }) ///// anmate후 함수 /////

            // 배너블릿 순번 증가
            bseq++
            if (bseq === 6) bseq = 0 // 한계수

        } ///// if /////
        
        // 3. left값이 -90%보다 크면 오른쪾으로 이동하기 
        else if (sleft > -p4ban * 0.9) {

            // 오른쪽이동 애니메이션 : 0%이동
            $(this).stop().animate({

                left: '0px'

            }, 1500, 'easeOutCubic', function () { // 애니메이션후 함수

                // 이동 후 앞에 아무것도 없으므로  맨뒤에 li를 맨 앞으로 이동후left값을 -100%로 변경!!!처음과 같은 상태로 만들어 준다!!!!
                $(this).prepend($('li', this).last()).css({
                    left: -p4ban + 'px'
                }) ///// css /////

                // 광드래그 커버제거
                prot.hide()

                // 배너타이틀 등장함수 호출
                banTit()

            }) ///// animate 후 함수

            // 배너블릿 순번 감소
            bseq--
            if (bseq === -1) bseq = 5 // 한계수


        } ///// else if /////

        /// 4. 범위에 들지 않은 경우(-110%~-90%) 제자리로 돌아가기
        else {

            $(this).stop().animate({
                    left: -p4ban + "px"
                }, 400, "easeOutCubic",
                function () { // 애니후 ///

                    // 광드래그 커버제거!
                    prot.hide();

                }); ////////// animate /////////////

        } ///////////// else //////////////////
        
        /// 블릿 해당순번 li에 class "on"넣기 ///
        $(".indic li").eq(bseq).addClass("on")
            .siblings().removeClass("on");
        
    })///// dragstop touchend /////


    /////////////////////////////////////////////////////////////////////////////////
    
     /*//////////////////////////////////////////////////////////////////////////////
        함수명 : autoSlide
        기능 : 슬라이드 자동넘기기
    *////////////////////////////////////////////////////////////////////////////////
    

    let autoSlide = function () {

        // 광드래그 막기용 커버
        prot.show();

        // 슬라이드 왼쪽이동하기 (드래그이동 if문과 동일)
        // 왼쪾 이동 애니메이션 : -200%이동과 동일
        sld.animate({

            left: -p4ban * 2 + 'px'

        }, 1500, 'easeOutCubic', function () { // 함수 애니후

            // 이동후에 앞에 두개의 슬라이드가 있으므로 하나를 뒤로 이동시킨후 left값을 다시 -100%로 변경!!! 처음과 똑같은 상태로 만들어 준다!!
            $(this).append($('li', this).first()).css({
                left: -p4ban + 'px'
            }) ///// css /////

            // 광드래그 커버제거
            prot.hide()

            // 배너타이틀 등장함수 호출
            banTit()

        }) ///// anmate후 함수 /////

        // 배너블릿 순번 증가
        bseq++
        if (bseq === 6) bseq = 0 // 한계수

        // 블릿 해당순번 li에 class "on" 넣기
        $('.indic li').eq(bseq).addClass('on')
            .siblings().removeClass('on')

    } ///// autoSlide /////
   /////////////////////////////////////////////////////////////////////////////////////// 
    
    
    let autoI // 인터발용 변수

    /*///////////////////////////////////////////////////////////////////////
        함수명 : autoCall
        기능 : 메인슬라이드 배너 넘기기 자동호출
    */ ///////////////////////////////////////////////////////////////////////
   
    let autoCall = function () {

        autoI = setInterval(autoSlide, 4000)

    } ///// autoCall /////

    // 슬라이드 자동넘김 최초호출!!!!
    autoCall()

    // 타임 아웃용 변수
    let autoT

    /*/////////////////////////////////////////////////////////////////
        함수  
        // 타임 아웃용 변수명 : clearAuto
        let 기능 : 메인배너autoT 슬라이드 자동호출 지우기 -> 일정시간후 자동넘김 재호출
        어디서 호출 : 직접 드래그시 호출!!!
        
    */ /////////////////////////////////////////////////////////////////
    let clearAuto = function () {

        // 인터발 지우기
        clearInterval(autoI)

        // 타임아웃 지우기
        clearTimeout(autoT)

        // 매번 재호출 셋팅!
        autoT = setTimeout(autoCall, 4000) // 4초후에 자동넘김 재호출

    } ///// clearAuto /////
   ////////////////////////////////////////////////////////////////////// 
    
    
    


}) //// jQB //////////////////////////////////
//////////////////////////////////////////////

